version: '3'
services:
  mysql:
    image: mysql:8.3.0
    networks:
      - e-wallet_network
    volumes:
      - ${MYSQL_DATA_PATH}:/var/lib/mysql
      - ${MYSQL_CUSTOM_CONFIG_PATH}:/etc/mysql/conf.d
      - ${MYSQL_INIT_DB}:/docker-entrypoint-initdb.d
    env_file: .env
    ports:
      - ${MYSQL_BINDING_PORT}:${MYSQL_PORT}
    environment:
      - TZ=${TZ}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
  membership-service:
    restart: on-failure
    image: e-wallet-membership-service:0.0.1-SNAPSHOT
    networks:
      - e-wallet_network
    env_file: .env
    ports:
      - ${MEMBERSHIP_SERVICE_BINDING_PORT}:${MEMBERSHIP_SERVICE_PORT}
    depends_on:
      - mysql
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT_STORAGE_ENGINE=innodb
  banking-service:
    restart: on-failure
    image: e-wallet-banking-service:0.0.1-SNAPSHOT
    networks:
      - e-wallet_network
    env_file: .env
    ports:
      - ${BANKING_SERVICE_BINDING_PORT}:${BANKING_SERVICE_PORT}
    depends_on:
      - mysql
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT_STORAGE_ENGINE=innodb
  money-service:
    restart: on-failure
    image: e-wallet-money-service:0.0.1-SNAPSHOT
    networks:
      - e-wallet_network
    env_file: .env
    ports:
      - ${MONEY_SERVICE_BINDING_PORT}:${MONEY_SERVICE_PORT}
    depends_on:
      - mysql
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT_STORAGE_ENGINE=innodb
  zookeeper:
    image: arm64v8/zookeeper:latest
    networks:
      - e-wallet_network
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_TLS_CLIENT_AUTH=none
      - ZOO_TLS_QUORUM_CLIENT_AUTH=none
  kafka:
    image: bitnami/kafka:latest
    networks:
      - e-wallet_network
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1 # 브로커 ID
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181 # zookeeper address
      - ALLOW_PLAINTEXT_LISTENER=yes # 암호화 되지 않은 리스너의 접근 권한 여부
      - KAFKA_CFG_LISTENERS=LC://kafka:29092,LX://kafka:9092 # 브로커가 서버 소켓 생성에 사용할 포트
      - KAFKA_CFG_ADVERTISED_LISTENERS=LC://kafka:29092,LX://${DOCKER_HOST_IP:-localhost}:9092 # 클라이언트가 브로커에 연결하는데 사용할 포트
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=LC:PLAINTEXT,LX:PLAINTEXT # 리스너의 보안 프로토콜 본 컴포즈 파일에서는 내부, 외부 전부 평문 사용
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LC # 브로커의 네임
    depends_on:
      - zookeeper
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    networks:
      - e-wallet_network
    ports:
      - "8989:8080"
    restart: always
    depends_on:
      - kafka
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

networks:
  e-wallet_network:
    driver: bridge